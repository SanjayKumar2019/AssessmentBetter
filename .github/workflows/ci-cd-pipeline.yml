name: Node.js CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-app:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-app:${{ github.sha }}

      - name: Set up Kubeconfig
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/nodejs-app nodejs-app=${{ secrets.DOCKER_USERNAME }}/nodejs-app:${{ github.sha }}
          kubectl rollout status deployment/nodejs-app

  notify:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Send Slack notification on success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment successful! App is live."}' ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Send Slack notification on failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment failed. Please check the logs."}' ${{ secrets.SLACK_WEBHOOK_URL }}
