# Node.js CI/CD Pipeline

## Overview

This project demonstrates a CI/CD pipeline for a Node.js application. It automates the following:

1. Runs tests on pull requests.
2. Builds a Docker image.
3. Deploys the image to a Kubernetes cluster.
4. Notifies about deployment status.

## Project Structure

- `src/`: Contains application source code.
- `tests/`: Contains test files.
- `kubernetes/`: Contains Kubernetes manifests for deployment.
- `.github/workflows/ci-cd.yml`: GitHub Actions workflow for CI/CD.

## How It Works

1. **Testing:** Every pull request triggers automated tests.
2. **Building:** Upon merging to the main branch, a Docker image is built and pushed to a Docker repository.
3. **Deploying:** The Docker image is deployed to a Kubernetes cluster using `kubectl`.
4. **Notifications:** Deployment success or failure is notified.

## Prerequisites

- Docker Hub account
- Kubernetes cluster
- GitHub repository secrets:
  - `DOCKER_USERNAME`
  - `DOCKER_PASSWORD`
  - `KUBECONFIG`

## Running Locally

```bash
# Install dependencies
npm install

# Run the app
npm start

# Run tests
npm test
